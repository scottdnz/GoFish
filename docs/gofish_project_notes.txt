**GoFish game project notes**

24/7/20:
Mapped out messages & buttons behaviour for turns
demo in file:///home/scott/ws/js/tests/t_card_actionbar_layout/t_card_actionbar_layout2.html
also updated HTML - fixed areas now, just going to disable buttons when not right context

main.js startTurns method
Made a Player class to build DOM objects
see below!



Same current player actions:
    ask a player for a card action
    go fish a card action
    next turn action

Each turn:
-update "playerX's turn"
-update actionAsk
-update actionResponse
-update playerRow(s)


if it's mainPlayer's turn, let them ask someone else for a card
    fail: mainPlayer go fish
    success: NPC gives card to mainPlayer
        remove card from NPC hand
        assign card to mainPlayer hand
        - mainPlayer turn again

-if it's NPC player's turn, ask someone else for a card
    fail: the selected player Go Fish
    success: selected player gives card to NPC Player
        remove card from selected player
        give card to mainPlayer
        NPC player turn again



Player
    goFish
    receiveCard
    giveCard
    displayActionAskBar
    displayActionResponseBar
    askOtherPlayerForCard
    answerOtherPlayerforCard

Turn
   for the current player, displayActionAskBar
   after an action, displayActionResponseBar





16-7/5/20:
-Can take X cards from deck + assign to hand
-2 new Postman requests
-Need to finish functionality for GoFish button - have JS
    --> need to update the UI with the new card for the main player
-Need to respond to player giving main player a card
-Need to deal with player turn moving on, and other players asking the mainPlayer for a card
    if have, receive card from another player. If not, take card from top of deck

3/5/20:


27/4
Turn - 



19/4:
Got some API calls going
-initialiseCards (sets up players, hands, etc.)
-dealCardsToPlayers - returns player, hand & cards info
-JS method displays a row & stacks cards OK on another
-didn't need to show other player's cards. Keep for test mode?
Only need to show:
-player's cards
-deck
-area to represent other players
-area to represent status messages

Need call/method to sort cards in deck by position once card(s) removed!!

Buttons for actions:
-ask Player if have card:
dialog to choose player & card to ask for
when other player is asked, they say "Go fish" or give card
when you are asked, you say "Go fish" or give card
-transfer from hand to another hand (update cards table)
-or transfer from deck to hand (update cards table)


Should have:
-made a separate shuffle method/call
-made a fixed card table with suit, display_label, value and image_name
-put game_id and player_id in the hand table. Remove hand_id and game_id from the player table
-add active field to game and hand tables

13/4:
-installed Postman
-got this API call going to find cards in deck:
http://localhost/gofish/game/7/deck/7
-had problems with serializer when have relations between entities (circular reference)
-insert commands for player, hand, game, deck, card
-probably don't need relation between card & game (cards always in deck or hand)




11/4:
-created these entities: game, deck, player, hand, card
-made an initialise route for starting a new game...carry on with
-got debugging going in Firefox/Netbeans
-got main player cards stacking in UI
-realised don't need to show other players' cards
-need to work on deck methods - shuffle, take from top, add to bottom
-player: add to hand, give to another player
How will player ask another player if they have a card?
e.g. choose card, choose player...

localhost/gofish/main


Following test PHP file - t_poker_cards.php and Deck.php class
-need shuffle, takeCardFromTop and addCardToBottom($card) methods updated to use SQL

Set up to run just through test server
php -S 127.0.0.1:8000 -t public

Have a MainController

Set up database "gofish" and one table

Have a Card entity and CardRepository
-using Doctrine ORM or querybuilder

HTML page - show hands:
http://localhost:8000/main

API call - JSON response:
http://localhost:8000/deck

not in git yet

Planning to just use jQuery
-see main.js file


Symfony Request/get params notes:
https://symfony.com/doc/current/introduction/http_fundamentals.html

routing:
https://symfony.com/doc/current/routing.html#route-parameters

doctrine:
https://symfony.com/doc/current/doctrine.html#fetching-objects-from-the-database


entities:

game - player - hand - card
game - deck - card

*game
-started
-players
-deck

*deck
-cards

*player
-name
-hand

*hand
-cards

*card

Create hands

Create deck

Create game - with deckID

Create player(s)

Create cards with gameID and DeckID and position (ordered to begin with)
